**************
Code Structure
**************

This is an overview the internal structure of the code, for readers who
want to add functionality or support reading a new format.

Baseband's source code is located under the :file:`baseband` directory.  The
:file:`_astropy_init.py` and :file:`conftest.py` files in this folder link 
Baseband and `the astropy-helpers module <https://github.com/astropy/astropy-helpers>`_
together (which, among other things, enables the test suite and Sphinx
documentation builder).  :file:`version.py` is auto-generated by 
:file:`setup.py` in the main directory.

The code for reading and writing a particular file format supported by Baseband
located in its correspondingly named subdirectory.  How code is structured within
the subdirectory follows a very similar pattern for all file formats - each 
subdirectory contains:

- :file:`baseband/<format>/base.py` - defines a master ``open()`` read/write
  function, and classes for reading from and writing to files and data streams.
  These import dataframe storage containers from ``frame.py``.
- :file:`baseband/<format>/frame.py` - defines container classes that store
  dataframes, including both their header and data.  Header I/O and storage
  classes are imported from ``header.py``, and those for the data from
  ``payload.py``.
- :file:`baseband/<format>/header.py` - defines classes for reading and storing
  dataframe headers.
- :file:`baseband/<format>/payload.py` - defines classes for reading and
  storing dataframe data.
- :file:`baseband/<format>/tests/test_<format>.py` - defines routines to test
  the above classes and functions.

Code that is common to (or base classes used by) both VDIF and Mark 5B file
formats is located in :file:`baseband/vlbi_base`.  This folder follows the same pattern
of files as above, with, for example, VDIF's header classes inheriting from classes
in :file:`baseband/vlbi_base/header.py`.

In addition to file format subdirectories, there are three others:

- :file:`baseband/data` - stores data snippets for testing.
- :file:`baseband/helpers` - functions and classes for reading sequences of
  files as if they were a single file.
- :file:`baseband/tests` - configuration files for the test suite.
  :file:`baseband/tests/test_conversion.py` houses tests for converting between
  file formats.

To understand in greater detail how Baseband works, we must consider individual
file formats.


Specific File Formats
=====================

.. toctree::
   :maxdepth: 1

   code_struct/vdif


Sequential File Reader
======================
